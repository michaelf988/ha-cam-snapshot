blueprint:
  name: "Camera Event Notification (no AI)"
  author: "MF"
  homeassistant:
    min_version: 2024.10.0
  description: >
    Sendet Benachrichtigungen bei Kamera-Ereignissen – mit Snapshot oder Live-Vorschau – ganz ohne AI-Analyse.
    Unterstützt dynamische/konsolidierte Zustellung, frei wählbares Ziel-Dashboard, Android/iOS-Optionen
    und optional TTS.
  domain: automation
  source_url: https://github.com/michaelf988/ha-cam-snapshot/blob/main/ha-cam-snapshot.yaml

input:
    # Laufbedingungen & Cooldown
    run_conditions:
      name: Run Conditions
      description: Bedingungen, die erfüllt sein müssen.
      default: []
      selector:
        condition:
    cooldown:
      name: Cooldown (globale Verzögerung)
      default: { minutes: 10 }
      selector:
        duration: {}

    # Kamera & Sensoren
    camera_entities:
      name: Camera Entities
      description: Eine oder mehrere Kameras.
      default: []
      selector:
        entity:
          multiple: true
          filter:
            domain: camera
    trigger_state:
      name: Trigger State
      description: Zustand der Kamera, der den Trigger auslöst.
      default: recording
      selector:
        text:
    motion_sensors:
      name: Motion Sensors (optional)
      description: Binary-Sensoren, falls Kamerazustände nicht genutzt werden.
      default: []
      selector:
        entity:
          multiple: true
          filter:
            domain: binary_sensor

    # Benachrichtigung – Basis
    notify:
      name: Enable Notifications
      default: true
      selector:
        boolean:
    condition_notify:
      name: Extra Condition(s) for Notify (optional)
      default: []
      selector:
        condition:
    notify_device:
      name: Notify Device(s)
      description: Zielgeräte (Home Assistant Companion App).
      default: []
      selector:
        device:
          multiple: true
          filter:
            integration: mobile_app
    notification_delivery:
      name: Notification Delivery
      default: Dynamic
      selector:
        select:
          options: [Dynamic, Consolidated]
    preview_mode:
      name: Preview Mode
      default: Snapshot
      selector:
        select:
          options:
            - Snapshot
            - Live Preview
    notification_time:
      name: Time Snippet in Title
      description: Optionaler Zeit-Text im Titel.
      default: ""
      selector:
        select:
          options:
            - label: No Time Added
              value: ""
            - label: 12 Hour
              value: 'at {{ now().strftime("%I:%M %p") }}'
            - label: 24 Hour
              value: 'at {{ now().strftime("%H:%M") }}'
    delay_notification:
      name: Notification Cooldown (seconds)
      default: 60
      selector:
        number:
          min: 0
          max: 86400
          unit_of_measurement: seconds
          mode: box

    # Pfade / Navigation
    file_path:
      name: File Path for Snapshot
      default: "/media/snapshots/{{ camera_file_path }}/last_motion.jpg"
      selector:
        text:
    tap_navigate:
      name: Tap Navigate (Dashboard Path)
      default: "/lovelace/0"
      selector:
        text:

    # Android
    notification_sticky:
      name: Sticky Notification (Android)
      default: true
      selector:
        boolean:
    notification_color:
      name: Notification Accent Color (Android)
      default: "#03a9f4"
      selector:
        text:
    notification_icon:
      name: Status Bar Icon (Android)
      default: "mdi:cctv"
      selector:
        icon:
          placeholder: mdi:cctv
    notification_channel:
      name: Notification Channel (Android)
      description: Kanalname; dynamische Texte bitte in den Variablen bauen, nicht hier.
      default: "Camera Snapshot"
      selector:
        text:

    # iOS
    notification_sound:
      name: iOS Sound
      default: "default"
      selector:
        text:
    notification_volume:
      name: iOS Sound Volume (0..1)
      default: 1
      selector:
        number:
          min: 0
          max: 1
          step: 0.1
    notification_critical:
      name: iOS Critical Alert
      default: false
      selector:
        boolean:

    # Optional TTS (Android)
    tts_notification:
      name: TTS on Android
      default: false
      selector:
        boolean:
    tts_volume:
      name: TTS Volume Stream (Android)
      default: notification_stream
      selector:
        select:
          options: [notification_stream, alarm_stream, alarm_stream_max]
    condition_notify_tts:
      name: Condition(s) for TTS (optional)
      default: []
      selector:
        condition:

# ================= Variables =================
variables:
  cooldown: !input cooldown
  preview_mode: !input preview_mode

  # Geräte / Notification
  notify_devices: !input notify_device
  notification_delivery: !input notification_delivery
  notification_sticky: !input notification_sticky
  notification_color: !input notification_color
  notification_icon: !input notification_icon
  notification_channel: !input notification_channel
  notification_sound: !input notification_sound
  notification_volume: !input notification_volume
  notification_critical: !input notification_critical
  delay_notification: !input delay_notification

  # Kamera & Pfade
  camera_entities_list: !input camera_entities
  motion_sensors_list: !input motion_sensors
  file_path: !input file_path
  snapshot_access_file_path: "{{ file_path | replace('/config/www','/local') | replace('/media','/media/local') }}"

  # Anzeige
  notification_time: !input notification_time
  label: "Motion detected"

  # Abgeleitet
  camera_entity: >
    {% if motion_sensors_list and not trigger.entity_id.startswith("camera") %}
      {% set index = motion_sensors_list.index(trigger.entity_id) %}
      {{ camera_entities_list[index] }}
    {% else %}
      {{ trigger.entity_id }}
    {% endif %}
  camera_entity_snapshot: "{{ camera_entities_list[0] if camera_entities_list|length > 0 else '' }}"
  camera_file_path: "{{ camera_entity_snapshot.replace('camera.', '') }}"
  camera: "{{ camera_entities_list[0].replace('camera.', '').replace('_', ' ') | title if camera_entities_list|length > 0 else 'Camera' }}"
  tag: "{{ (camera_entity or 'camera.unknown') ~ now().timestamp()|int }}"

  device_name_map: >
    {% set ns = namespace(device_names=[]) %}
    {% for device_id in notify_devices %}
      {% set device_name = device_attr(device_id, "name") %}
      {% if device_name %}
        {% set sanitized_name = "mobile_app_" + device_name | slugify  %}
        {% set ns.device_names = ns.device_names + [sanitized_name] %}
      {% endif %}
    {% endfor %}
    {{ ns.device_names }}

# ================= Meta =================
mode: single
max_exceeded: silent

# ================= Trigger =================
trigger:
  - platform: state
    entity_id: !input camera_entities
    to: !input trigger_state
    id: camera_trigger
  - platform: state
    entity_id: !input motion_sensors
    to: "on"
    id: motion_sensor_trigger

# ================= Conditions =================
condition:
  - condition: and
    conditions: !input run_conditions

# ================= Actions =================
action:
  # Benachrichtigen nur wenn erlaubt + Extra-Condition erfüllt + Cooldown passt
  - if:
      - condition: template
        value_template: !input notify
    then:
      - if:
          - condition: !input condition_notify
        then:
          - if:
              - condition: template
                value_template: >
                  {{ not this.attributes.last_triggered
                     or (now() - this.attributes.last_triggered).seconds > delay_notification }}
            then:
              - choose:
                  # ---------- Dynamic Delivery ----------
                  - conditions:
                      - condition: template
                        value_template: "{{ notification_delivery == 'Dynamic' }}"
                    sequence:
                      - choose:
                          # Snapshot
                          - conditions:
                              - condition: template
                                value_template: "{{ preview_mode == 'Snapshot' }}"
                            sequence:
                              - service: camera.snapshot
                                target:
                                  entity_id: "{{ camera_entity_snapshot }}"
                                data:
                                  filename: !input file_path

                              - alias: "Send instant notification (Snapshot)"
                                repeat:
                                  for_each: "{{ device_name_map }}"
                                  sequence:
                                    - service: "notify.{{ repeat.item }}"
                                      data:
                                        title: "{{ label }} {{ notification_time }}"
                                        message: "{{ camera }} has detected activity."
                                        data:
                                          url: !input tap_navigate          # iOS
                                          clickAction: !input tap_navigate  # Android
                                          tag: "{{ tag }}"
                                          group: "{{ notification_channel }}"
                                          alert_once: true
                                          ttl: 0
                                          priority: high
                                          channel: "{{ notification_channel }}"
                                          color: "{{ notification_color }}"
                                          notification_icon: "{{ notification_icon }}"
                                          sticky: "{{ notification_sticky }}"
                                          image: "{{ snapshot_access_file_path }}"
                                          attachment:
                                            url: "{{ snapshot_access_file_path }}"
                                            content_type: JPEG
                                          push:
                                            interruption-level: active
                                            sound:
                                              name: "{{ notification_sound }}"
                                              volume: "{{ notification_volume }}"
                                              critical: "{{ notification_critical }}"

                          # Live Preview
                          - conditions:
                              - condition: template
                                value_template: "{{ preview_mode == 'Live Preview' }}"
                            sequence:
                              - alias: "Send instant notification (Live Preview)"
                                repeat:
                                  for_each: "{{ device_name_map }}"
                                  sequence:
                                    - service: "notify.{{ repeat.item }}"
                                      data:
                                        title: "{{ label }} {{ notification_time }}"
                                        message: "{{ camera }} has detected activity."
                                        data:
                                          entity_id: "{{ camera_entity }}"
                                          url: !input tap_navigate
                                          tag: "{{ tag }}"
                                          group: "{{ notification_channel }}"
                                          alert_once: true
                                          ttl: 0
                                          priority: high
                                          push:
                                            interruption-level: active
                                            sound:
                                              name: "{{ notification_sound }}"
                                              volume: "{{ notification_volume }}"
                                              critical: "{{ notification_critical }}"

                  # ---------- Consolidated Delivery ----------
                  - conditions:
                      - condition: template
                        value_template: "{{ notification_delivery == 'Consolidated' }}"
                    sequence:
                      - choose:
                          - conditions:
                              - condition: template
                                value_template: "{{ preview_mode == 'Snapshot' }}"
                            sequence:
                              - service: camera.snapshot
                                target:
                                  entity_id: "{{ camera_entity_snapshot }}"
                                data:
                                  filename: !input file_path
                      - delay: "00:00:05"
                      - choose:
                          # Konsolidiert – Snapshot
                          - conditions:
                              - condition: template
                                value_template: "{{ preview_mode == 'Snapshot' }}"
                            sequence:
                              - alias: "Send consolidated notification (Snapshot)"
                                repeat:
                                  for_each: "{{ device_name_map }}"
                                  sequence:
                                    - service: "notify.{{ repeat.item }}"
                                      data:
                                        title: "{{ label }} {{ notification_time }}"
                                        message: "{{ camera }} has detected activity."
                                        data:
                                          url: !input tap_navigate
                                          clickAction: !input tap_navigate
                                          tag: "{{ tag }}"
                                          group: "{{ notification_channel }}"
                                          alert_once: true
                                          ttl: 0
                                          priority: high
                                          channel: "{{ notification_channel }}"
                                          color: "{{ notification_color }}"
                                          notification_icon: "{{ notification_icon }}"
                                          sticky: "{{ notification_sticky }}"
                                          image: "{{ snapshot_access_file_path }}"
                                          attachment:
                                            url: "{{ snapshot_access_file_path }}"
                                            content_type: JPEG
                                          push:
                                            interruption-level: active
                                            sound:
                                              name: "{{ notification_sound }}"
                                              volume: "{{ notification_volume }}"
                                              critical: "{{ notification_critical }}"
                          # Konsolidiert – Live Preview
                          - conditions:
                              - condition: template
                                value_template: "{{ preview_mode == 'Live Preview' }}"
                            sequence:
                              - alias: "Send consolidated notification (Live Preview)"
                                repeat:
                                  for_each: "{{ device_name_map }}"
                                  sequence:
                                    - service: "notify.{{ repeat.item }}"
                                      data:
                                        title: "{{ label }} {{ notification_time }}"
                                        message: "{{ camera }} has detected activity."
                                        data:
                                          entity_id: "{{ camera_entity }}"
                                          url: !input tap_navigate
                                          tag: "{{ tag }}"
                                          group: "{{ notification_channel }}"
                                          alert_once: true
                                          ttl: 0
                                          priority: high
                                          push:
                                            interruption-level: active
                                            sound:
                                              name: "{{ notification_sound }}"
                                              volume: "{{ notification_volume }}"
                                              critical: "{{ notification_critical }}"

      # Optional: TTS auf Android
      - if:
          - condition: template
            value_template: !input tts_notification
        then:
          - if:
              - condition: !input condition_notify_tts
            then:
              - alias: "TTS Notification (Android)"
                repeat:
                  for_each: "{{ device_name_map }}"
                  sequence:
                    - service: "notify.{{ repeat.item }}"
                      data:
                        message: TTS
                        data:
                          ttl: 0
                          priority: high
                          media_stream: !input tts_volume
                          tts_text: "{{ camera }} has detected activity."

  # Globaler Cooldown am Ende
  - delay: !input cooldown
