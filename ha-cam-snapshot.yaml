blueprint:
  name: "Camera Event Notification (no AI)"
  author: "MF"
  homeassistant:
    min_version: 2024.10.0
  description: >
    Sendet Benachrichtigungen bei Kamera-Ereignissen – mit Snapshot oder Live-Vorschau – ganz ohne AI-Analyse.
    Unterstützt dynamische/konsolidierte Zustellung, frei wählbares Ziel-Dashboard, Android/iOS-Optionen
    und optional TTS.
  domain: automation
  source_url: https://github.com/michaelf988/ha-cam-snapshot/blob/main/ha-cam-snapshot.yaml

  input:
    # --- Pflicht / Basis ---
    camera_entities:
      name: "Camera Entities"
      description: "Eine oder mehrere Kameras."
      selector:
        entity:
          multiple: true
          filter:
            domain: camera
    trigger_state:
      name: "Trigger State"
      description: "Kamera-Zustand, der das Event auslöst (z. B. recording)."
      default: "recording"
      selector:
        text:
    motion_sensors:
      name: "Motion Sensors (optional)"
      description: "Binary-Sensoren als zusätzlicher Trigger."
      default: []
      selector:
        entity:
          multiple: true
          filter:
            domain: binary_sensor
    notify_device:
      name: "Notify Device(s)"
      description: "Zielgeräte (Home Assistant Companion App)."
      selector:
        device:
          multiple: true
          filter:
            integration: mobile_app
    notify:
      name: "Enable Notifications"
      default: true
      selector:
        boolean:

    # --- Benachrichtigungen ---
    notification_delivery:
      name: "Notification Delivery"
      description: "Dynamic (sofort) oder Consolidated (kurze Sammelverzögerung)."
      default: "Dynamic"
      selector:
        select:
          options: ["Dynamic", "Consolidated"]
    preview_mode:
      name: "Preview Mode"
      default: "Snapshot"
      selector:
        select:
          options: ["Snapshot", "Live Preview"]
    delay_notification:
      name: "Notification Cooldown (seconds)"
      description: "Abstand zwischen zwei Benachrichtigungen."
      default: 60
      selector:
        number:
          min: 0
          max: 86400
          mode: box
          unit_of_measurement: seconds
    notification_time:
      name: "Time Snippet in Title (optional)"
      description: "Leerlassen oder Uhrzeit-Text hinzufügen."
      default: ""
      selector:
        select:
          options:
            - label: "No Time Added"
              value: ""
            - label: "12 Hour"
              value: 'at {{ now().strftime("%I:%M %p") }}'
            - label: "24 Hour"
              value: 'at {{ now().strftime("%H:%M") }}'

    # --- Pfade / Navigation ---
    file_path:
      name: "File Path for Snapshot"
      description: "Speicherort des Snapshots (stabiler Dateiname)."
      default: "/media/snapshots/{{ camera_file_path }}/last_motion.jpg"
      selector:
        text:
    tap_navigate:
      name: "Tap Navigate (Dashboard Path)"
      default: "/lovelace/0"
      selector:
        text:

    # --- Android ---
    notification_sticky:
      name: "Sticky Notification (Android)"
      default: true
      selector:
        boolean:
    notification_color:
      name: "Notification Accent Color (Android)"
      default: "#03a9f4"
      selector:
        text:
    notification_icon:
      name: "Status Bar Icon (Android)"
      description: "MDI-Iconname, z. B. mdi:cctv"
      default: "mdi:cctv"
      selector:
        text:
    notification_channel:
      name: "Notification Channel (Android)"
      default: "Camera Snapshot"
      selector:
        text:

    # --- iOS ---
    notification_sound:
      name: "iOS Sound"
      default: "default"
      selector:
        text:
    notification_volume:
      name: "iOS Sound Volume (0..1)"
      default: 1
      selector:
        number:
          min: 0
          max: 1
          step: 0.1
    notification_critical:
      name: "iOS Critical Alert"
      default: false
      selector:
        boolean:

    # --- Optional TTS (Android) ---
    tts_notification:
      name: "TTS on Android"
      default: false
      selector:
        boolean:
    tts_volume:
      name: "TTS Volume Stream (Android)"
      default: "notification_stream"
      selector:
        select:
          options: ["notification_stream", "alarm_stream", "alarm_stream_max"]

    # --- Globaler Cooldown ---
    cooldown:
      name: "Global Cooldown"
      description: "Verzögerung nach Aktionsende."
      default: { minutes: 10 }
      selector:
        duration: {}

# ================= Variables =================
variables:
  # Eingaben
  notify: !input notify
  notification_delivery: !input notification_delivery
  preview_mode: !input preview_mode
  delay_notification: !input delay_notification
  notification_time: !input notification_time
  file_path: !input file_path
  tap_navigate: !input tap_navigate

  notification_sticky: !input notification_sticky
  notification_color: !input notification_color
  notification_icon: !input notification_icon
  notification_channel: !input notification_channel

  notification_sound: !input notification_sound
  notification_volume: !input notification_volume
  notification_critical: !input notification_critical

  tts_notification: !input tts_notification
  tts_volume: !input tts_volume

  camera_entities_list: !input camera_entities
  motion_sensors_list: !input motion_sensors

  # Abgeleitet
  snapshot_access_file_path: "{{ file_path | replace('/config/www','/local') | replace('/media','/media/local') }}"
  label: "Motion detected"

  camera_entity: >
    {% if motion_sensors_list and not trigger.entity_id.startswith("camera") %}
      {% set idx = motion_sensors_list.index(trigger.entity_id) if trigger.entity_id in motion_sensors_list else 0 %}
      {{ camera_entities_list[idx] if (camera_entities_list|length > idx) else (camera_entities_list[0] if camera_entities_list|length>0 else '') }}
    {% else %}
      {{ trigger.entity_id }}
    {% endif %}
  camera_entity_snapshot: "{{ camera_entities_list[0] if camera_entities_list|length > 0 else '' }}"
  camera_file_path: "{{ camera_entity_snapshot.replace('camera.', '') if camera_entity_snapshot else 'camera_unknown' }}"
  camera: "{{ (camera_entities_list[0].replace('camera.', '').replace('_', ' ') | title) if camera_entities_list|length > 0 else 'Camera' }}"
  tag: "{{ (camera_entity or 'camera.unknown') ~ now().timestamp()|int }}"

  device_name_map: >
    {% set ns = namespace(device_names=[]) %}
    {% for device in (states|map(attribute='entity_id')|list) %}
      {# nur Namen der gewählten Geräte aus notify_device ziehen #}
    {% endfor %}
    {% for dev in (iif(is_list(!input notify_device), !input notify_device, [])) %}
      {% set name = device_attr(dev, 'name') %}
      {% if name %}
        {% set ns.device_names = ns.device_names + ['mobile_app_' ~ (name | slugify)] %}
      {% endif %}
    {% endfor %}
    {{ ns.device_names }}

# ================= Meta =================
mode: single
max_exceeded: silent

# ================= Trigger =================
trigger:
  - platform: state
    entity_id: !input camera_entities
    to: !input trigger_state
    id: "camera_trigger"
  - platform: state
    entity_id: !input motion_sensors
    to: "on"
    id: "motion_sensor_trigger"

# ================= Conditions =================
condition: []

# ================= Actions =================
action:
  - if:
      - condition: template
        value_template: "{{ notify }}"
    then:
      - if:
          - condition: template
            value_template: >
              {{ not this.attributes.last_triggered
                 or (now() - this.attributes.last_triggered).seconds > delay_notification }}
        then:
          - choose:
              # Dynamic Delivery
              - conditions:
                  - condition: template
                    value_template: "{{ notification_delivery == 'Dynamic' }}"
                sequence:
                  - choose:
                      # Snapshot
                      - conditions:
                          - condition: template
                            value_template: "{{ preview_mode == 'Snapshot' }}"
                        sequence:
                          - service: camera.snapshot
                            target:
                              entity_id: "{{ camera_entity_snapshot }}"
                            data:
                              filename: !input file_path
                          - alias: "Notify (Snapshot)"
                            repeat:
                              for_each: "{{ device_name_map }}"
                              sequence:
                                - service: "notify.{{ repeat.item }}"
                                  data:
                                    title: "{{ label }} {{ notification_time }}"
                                    message: "{{ camera }} has detected activity."
                                    data:
                                      url: !input tap_navigate
                                      clickAction: !input tap_navigate
                                      tag: "{{ tag }}"
                                      group: "{{ notification_channel }}"
                                      alert_once: true
                                      ttl: 0
                                      priority: high
                                      channel: "{{ notification_channel }}"
                                      color: "{{ notification_color }}"
                                      notification_icon: "{{ notification_icon }}"
                                      sticky: "{{ notification_sticky }}"
                                      image: "{{ snapshot_access_file_path }}"
                                      attachment:
                                        url: "{{ snapshot_access_file_path }}"
                                        content_type: JPEG
                                      push:
                                        interruption-level: active
                                        sound:
                                          name: "{{ notification_sound }}"
                                          volume: "{{ notification_volume }}"
                                          critical: "{{ notification_critical }}"
                      # Live Preview
                      - conditions:
                          - condition: template
                            value_template: "{{ preview_mode == 'Live Preview' }}"
                        sequence:
                          - alias: "Notify (Live Preview)"
                            repeat:
                              for_each: "{{ device_name_map }}"
                              sequence:
                                - service: "notify.{{ repeat.item }}"
                                  data:
                                    title: "{{ label }} {{ notification_time }}"
                                    message: "{{ camera }} has detected activity."
                                    data:
                                      entity_id: "{{ camera_entity }}"
                                      url: !input tap_navigate
                                      tag: "{{ tag }}"
                                      group: "{{ notification_channel }}"
                                      alert_once: true
                                      ttl: 0
                                      priority: high
                                      push:
                                        interruption-level: active
                                        sound:
                                          name: "{{ notification_sound }}"
                                          volume: "{{ notification_volume }}"
                                          critical: "{{ notification_critical }}"
              # Consolidated Delivery
              - conditions:
                  - condition: template
                    value_template: "{{ notification_delivery == 'Consolidated' }}"
                sequence:
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ preview_mode == 'Snapshot' }}"
                        sequence:
                          - service: camera.snapshot
                            target:
                              entity_id: "{{ camera_entity_snapshot }}"
                            data:
                              filename: !input file_path
                  - delay: "00:00:05"
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ preview_mode == 'Snapshot' }}"
                        sequence:
                          - alias: "Notify consolidated (Snapshot)"
                            repeat:
                              for_each: "{{ device_name_map }}"
                              sequence:
                                - service: "notify.{{ repeat.item }}"
                                  data:
                                    title: "{{ label }} {{ notification_time }}"
                                    message: "{{ camera }} has detected activity."
                                    data:
                                      url: !input tap_navigate
                                      clickAction: !input tap_navigate
                                      tag: "{{ tag }}"
                                      group: "{{ notification_channel }}"
                                      alert_once: true
                                      ttl: 0
                                      priority: high
                                      channel: "{{ notification_channel }}"
                                      color: "{{ notification_color }}"
                                      notification_icon: "{{ notification_icon }}"
                                      sticky: "{{ notification_sticky }}"
                                      image: "{{ snapshot_access_file_path }}"
                                      attachment:
                                        url: "{{ snapshot_access_file_path }}"
                                        content_type: JPEG
                                      push:
                                        interruption-level: active
                                        sound:
                                          name: "{{ notification_sound }}"
                                          volume: "{{ notification_volume }}"
                                          critical: "{{ notification_critical }}"
                      - conditions:
                          - condition: template
                            value_template: "{{ preview_mode == 'Live Preview' }}"
                        sequence:
                          - alias: "Notify consolidated (Live Preview)"
                            repeat:
                              for_each: "{{ device_name_map }}"
                              sequence:
                                - service: "notify.{{ repeat.item }}"
                                  data:
                                    title: "{{ label }} {{ notification_time }}"
                                    message: "{{ camera }} has detected activity."
                                    data:
                                      entity_id: "{{ camera_entity }}"
                                      url: !input tap_navigate
                                      tag: "{{ tag }}"
                                      group: "{{ notification_channel }}"
                                      alert_once: true
                                      ttl: 0
                                      priority: high
                                      push:
                                        interruption-level: active
                                        sound:
                                          name: "{{ notification_sound }}"
                                          volume: "{{ notification_volume }}"
                                          critical: "{{ notification_critical }}"
  - delay: !input cooldown
