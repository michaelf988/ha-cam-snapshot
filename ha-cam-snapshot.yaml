blueprint:
  name: Camera Event Notification (no AI)
  author: MF
  homeassistant:
    min_version: 2024.10.0
  description: >
    Kamera-Benachrichtigung für iOS: macht bei Ereignis (Kamera-Zustand ODER Bewegungsmelder)
    einen Snapshot und sendet ihn als Anhang per Push – nutzt den friendly_name der Kamera.
  domain: automation
  source_url: https://github.com/michaelf988/ha-cam-snapshot/blob/main/ha-cam-snapshot.yaml

  input:
    camera_entities:
      name: Camera Entities
      description: Eine oder mehrere Kameras (Snapshot wird standardmäßig von der ersten erstellt).
      selector:
        entity:
          multiple: true
          filter:
            domain: camera

    trigger_state:
      name: Trigger State
      default: recording
      selector:
        text:

    motion_sensors:
      name: Motion Sensors (optional)
      default: []
      selector:
        entity:
          multiple: true
          filter:
            domain: binary_sensor

    notify_device:
      name: Notify Device(s)
      selector:
        device:
          multiple: true
          filter:
            integration: mobile_app

    notify:
      name: Enable Notifications
      default: true
      selector:
        boolean:

    delay_notification:
      name: Notification Cooldown (seconds)
      default: 60
      selector:
        number:
          min: 0
          max: 86400
          unit_of_measurement: seconds

    notification_time:
      name: Time Snippet in Title (optional)
      default: ""
      selector:
        select:
          options:
            - label: "No Time Added"
              value: ""
            - label: "12 Hour"
              value: 'um {{ now().strftime("%H:%M") }}'
            - label: "24 Hour"
              value: 'um {{ now().strftime("%H:%M") }}'

    tap_navigate:
      name: Tap Navigate (Dashboard Path)
      default: /lovelace/0
      selector:
        text:

    notification_sound:
      name: iOS Sound
      default: default
      selector:
        text:

    notification_volume:
      name: iOS Sound Volume (0..1)
      default: 1
      selector:
        number:
          min: 0
          max: 1
          step: 0.1

    notification_critical:
      name: iOS Critical Alert
      default: false
      selector:
        boolean:

    cooldown:
      name: Global Cooldown
      default: { minutes: 10 }
      selector:
        duration: {}

# ================= Variables =================
variables:
  notify: !input notify
  delay_notification: !input delay_notification
  notification_time: !input notification_time
  tap_navigate: !input tap_navigate

  notification_sound: !input notification_sound
  notification_volume: !input notification_volume
  notification_critical: !input notification_critical

  camera_entities_list: !input camera_entities
  motion_sensors_list: !input motion_sensors
  notify_devices: !input notify_device

  # passende Kamera anhand Trigger bestimmen
  camera_entity_snapshot: >
    {% if trigger is defined and trigger.entity_id %}
      {% set tid = trigger.entity_id %}
      {% if tid.startswith('binary_sensor') and (tid in motion_sensors_list) %}
        {% set i = motion_sensors_list.index(tid) %}
        {{ camera_entities_list[i] if camera_entities_list|length > i else (camera_entities_list[0] if camera_entities_list|length>0 else '') }}
      {% elif tid.startswith('camera.') %}
        {{ tid }}
      {% else %}
        {{ camera_entities_list[0] if camera_entities_list|length>0 else '' }}
      {% endif %}
    {% else %}
      {{ camera_entities_list[0] if camera_entities_list|length>0 else '' }}
    {% endif %}

  # freundlicher Name für Pfad und Push
  camera_friendly: {{ state_attr(camera_entity_snapshot, 'friendly_name') or 'Kamera' }}

  # Speicherpfad (Dateisystem): /config/www/snapshot/<kamera-slug>/last_motion.jpg
  camera_file_path: {{ camera_friendly | slugify }}
  file_path: /config/www/snapshot/{{ camera_file_path }}/last_motion.jpg

  # Web-Pfad für die Push: /local/terrasse/snapshot/<kamera-slug>/last_motion.jpg
  snapshot_access_file_path: /local/terrasse/snapshot/{{ camera_file_path }}/last_motion.jpg

  label: Bewegung erkannt
  camera: {{ camera_friendly }}

  # iOS: Dienstnamen aus Device-Namen ableiten
  device_name_map: >
    {% set ns = namespace(device_names=[]) %}
    {% for dev in (notify_devices or []) %}
      {% set name = device_attr(dev, 'name') %}
      {% if name %}
        {% set ns.device_names = ns.device_names + ['mobile_app_' ~ (name | slugify)] %}
      {% endif %}
    {% endfor %}
    {{ ns.device_names }}

# ================= Meta =================
mode: single
max_exceeded: silent

# ================= Trigger =================
trigger:
  - platform: state
    entity_id: !input camera_entities
    to: !input trigger_state
    id: camera_trigger
  - platform: state
    entity_id: !input motion_sensors
    to: "on"
    id: motion_sensor_trigger

# ================= Actions =================
action:
  - if:
      - condition: template
        value_template: "{{ notify }}"
    then:
      - if:
          - condition: template
            value_template: >
              {{ not this.attributes.last_triggered
                 or (now() - this.attributes.last_triggered).seconds > delay_notification }}
        then:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ camera_entity_snapshot != '' }}"
                sequence:
                  - service: camera.snapshot
                    target:
                      entity_id: "{{ camera_entity_snapshot }}"
                    data:
                      filename: "{{ file_path }}"

          - alias: Notify (iOS, Snapshot Attachment)
            repeat:
              for_each: "{{ device_name_map }}"
              sequence:
                - service: "notify.{{ repeat.item }}"
                  data:
                    title: "{{ camera }} - {{ label }} {{ notification_time }}"
                    message: "{{ camera }} hat eine Bewegung erkannt."
                    data:
                      url: !input tap_navigate
                      attachment:
                        url: "{{ snapshot_access_file_path }}"
                        content_type: JPEG
                      push:
                        interruption-level: active
                        sound:
                          name: "{{ notification_sound }}"
                          volume: "{{ notification_volume }}"
                          critical: "{{ notification_critical }}"

  - delay: !input cooldown
